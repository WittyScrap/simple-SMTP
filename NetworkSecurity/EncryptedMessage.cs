using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace NetworkSecurity
{
    /// <summary>
    /// Manges an encrypted message that is sent across a network.
    /// </summary>
    public class EncryptedMessage
    {
        /// <summary>
        /// The data that will be sent across the network.
        /// </summary>
        public string Data { get; set; }

        /// <summary>
        /// The sender IP address.
        /// </summary>
        public string Sender { get; }

        /// <summary>
        /// The receiver's IP address.
        /// </summary>
        public string Receiver { get; }

        /// <summary>
        /// The hash generated by this packet.
        /// </summary>
        public string Hash { get; private set; }

        /// <summary>
        /// Creates a new encrypted message.
        /// </summary>
        /// <param name="messageData">The contents of the message.</param>
        /// <param name="senderAddress">The IP address of the sender.</param>
        /// <param name="receiverAddress">The IP address of the receiver.</param>
        public EncryptedMessage(string messageData, string senderAddress, string receiverAddress)
        {
            Sender = senderAddress;
            Receiver = receiverAddress;
            Data = messageData;
        }

        /// <summary>
        /// Encrypts the message using the provided encryptor.
        /// </summary>
        public void Encrypt(IEncryptor encryptor, string key)
        {
            Data = encryptor.Encrypt(Data, key);
        }

        /// <summary>
        /// Decrypts the message using the provided encryptor.
        /// </summary>
        public void Decrypt(IEncryptor encryptor, string key)
        {
            Data = encryptor.Decrypt(Data, key);
        }

        /// <summary>
        /// Packs this message into a formatted string.
        /// </summary>
        public string Pack()
        {
            string data = "";

            data += $"sender: \"{Sender}\";";
            data += $"receiver: \"{Receiver}\";";
            data += $"data: \"{Data}\"";
        }

        /// <summary>
        /// Calculates a hash of this message from the sequence:
        /// Sender;Receiver;Data.
        /// </summary>
        public void RecalculateHash()
        {
            string combined = $"{Sender};{Receiver};{Data}";
            Hash = HashText(combined);
        }

        /// <summary>
        /// Calculates the hash for any input text.
        /// </summary>
        public static string HashText(string text)
        {
            using (SHA256 hash = SHA256.Create())
            {
                byte[] hashedValues = hash.ComputeHash(Encoding.UTF8.GetBytes(text));
                StringBuilder builder = new StringBuilder();

                foreach (byte point in hashedValues)
                {
                    builder.Append(point.ToString("x2"));
                }

                return builder.ToString();
            }
        }
    }
}
